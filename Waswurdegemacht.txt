CLIENT + GUI
1. farbe angepasst 
2. Klassen erstellt für advanced client +server
3. GUI anpassungen dummy, fkt noch nicht richtig //TODO anpassen
4. In ChatPDU eine ChatMessageConfirmPDU erstellt, gleich wie ChatMessagEvent nur sequenz nummer wurde entfernt
5. In Advanced, Methoden aus Simple kopiert und chatMessageConfirmAction erstellt //evt in advanced einfach die simple methoden aufrufen, code sparen
6. checkstyle bug noch anpassen (google xml geladen, bug  oxygen? Am Pc unter neon testen), confirm wird in messageevent aufgerufen, run() für advanced noch hinzugefügt mit debug änderungen
7. alles aus simple in advanced server kopiert
8. watchpoint auf tcpadvanced setzen und schauen warum fehler wenn advanced beim server ausgewählt
9. weitere gui anpassung mit advanced else if imp TCP angepasst muss nicht weiter angepasst werden sieht github für änderungen. fkt noch nicht
10. gui anpassungen beendet client und server switch jetzt fkt fähig (siehe github)
11. AdvancedChatWorkerThreadImpl handleincomingmessage, confirm_message geaddet und dummy action methoden
12. bug entdeckt vergessen beim client auf advanced zu wechselnt. Immo noch simpellistner in verwendung....
13. bug gefixt, jetzt im clientimpl wird der advanced oder simple je nach systemconstant ausgewählt 
14. clientseitig jetzt komplett funktionfähig +javadoc 
17. Confirm IoException entfernt und weiter angepasst(ähnlich wie server jetzt)
18. confirm aufruf wieder in ChatMessageEvent....
FEHLEND: nachricht anpassen wenn confirmed mit haken

SERVER
15. in common/clientlistentry waitlist und addwaitlistentry werden wir benutzen müssen
16. ab logoutrequestaction weiterlesen und verstehen
19. Chatmessageresponse aus request entfernt und in ChatMessageConfirm aufgerufen. FEHLEND: veränderungen der ganzen Counter usw soviel richtiger confirm.